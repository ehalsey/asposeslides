<?xml version="1.0" encoding="utf-8"?>
<Data>
  <Folders>
    <Folder>
      <Title>Programmers Guide</Title>
      <Description>Programmers Guide provides code samples about key programming concepts to build .NET and other applications that use Aspose.Slides.</Description>
      <FolderName>ProgrammersGuide</FolderName>
      <Order>1</Order>
      <Folders>
        <Folder>
          <Title>Working with Presentation</Title>
          <Description>This section includes the following examples: 

- Opening a Presentation
- Saving a Presentation
- Managing Presentation Properties
- Converting PPT to PPTX
- Accessing OpenDocument Presentation
- Converting Presentation to PDF
- Converting Presentation to TIFF
- Converting Presentation to XPS
- Converting Presentation to HTML
- Converting Presentation with Notes to Tiff
- Printing a Presentation</Description>
          <FolderName>WorkingWithPresentation</FolderName>
          <Order>1</Order>
          <Examples>
            <Example>
              <Title>Converting PPT to PPTX</Title>
              <Description>Aspose.Slides for .NET now facilitates the developers to access the PPT using Presentation class instance and converting that to respective PPTX format. In this example, we will convert PPT file to PPTX using Aspose.Slides for .NET</Description>
              <FolderName>ConvertingPPTToPPTX</FolderName>
              <Order>1</Order>
              <DocLink>
                <DisplayName>Converting PPT to PPTX</DisplayName>
                <Url>Converting+PPT+to+PPTX</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Presentation1.ppt</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Accessing OpenDocument Presentation</Title>
              <Description>Aspose.Slides for .NET now facilitates the developers to access the OpenDocument Presentations (ODP) using Presentation class in read only mode. However, you can save the presentation in PPTX or PPT format.</Description>
              <FolderName>AccessingOpenDocument</FolderName>
              <Order>2</Order>
              <DocLink>
                <DisplayName>Accessing OpenDocument Presentation</DisplayName>
                <Url>Accessing+OpenDocument+Presentation</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Source.odp</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Converting Presentation to PDF</Title>
              <Description>PDF documents are widely used as a standard format of exchanging documents between organizations, government sectors and individuals. It's a popular format so developers are often asked to convert Microsoft PowerPoint presentation files to PDF documents. Realizing this possible requirement, Aspose.Slides for .NET supports converting presentations to PDF documents without using any other component.</Description>
              <FolderName>ConvertingToPDF</FolderName>
              <Order>3</Order>
              <DocLink>
                <DisplayName>Converting Presentation to PDF</DisplayName>
                <Url>Converting+Presentation+to+PDF</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\output.pdf</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Converting Presentation to HTML</Title>
              <Description>HTML is one of several widely used format for exchanging data. Aspose.Slides for .NET provides support for converting a presentation to HTML which is an embedded SVG.</Description>
              <FolderName>ConvertingPresentationToHTML</FolderName>
              <Order>9</Order>
              <DocLink>
                <DisplayName>Converting Presentation to HTML</DisplayName>
                <Url>Converting+Presentation+to+HTML</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\demo.html</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Converting Presentation with Notes to Tiff</Title>
              <Description>TIFF is one of several widely used image formats that Aspose.Slides for .NET supports for converting a presentation with notes to images. You can also generate slide thumbnails in the Notes Slide view.</Description>
              <FolderName>ConvertingPresentationWithNotesToTiff</FolderName>
              <Order>10</Order>
              <DocLink>
                <DisplayName>Converting Presentation with Notes to Tiff</DisplayName>
                <Url>Converting+Presentation+with+Notes+to+Tiff</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\TestNotes.tiff</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
          </Examples>
          <Folders>
            <Folder>
              <Title>Opening a Presentation</Title>
              <Description>Using Aspose.Slides for .NET, developers can not only create PowerPoint presentations from scratch but also access or modify the existing ones. In this section, we will discuss the simplest approach to open and access an existing presentation.

    - Opening a Presentation.
    - Opening a Password Protected Presentation.
    - Accessing the Document Properties of a Password Protected Presentation without Password.</Description>
              <FolderName>OpeningAPresentation</FolderName>
              <Order>4</Order>
              <Examples>
                <Example>
                  <Title>Opening a Presentation</Title>
                  <Description>Aspose.Slides for .NET provides Presentation class that is used to open an existing presentation. It offers few overloaded constructors and we can make use of one of the suitable constructors of Presentation class to create its object based on an existing presentation.In the example given below, we have passed the name of the presentation file (to be opened) to the constructor of Presentation class. After the file is opened, we get the total number of slides present in the presentation.</Description>
                  <FolderName>OpeningaPresentation</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Opening a Presentation</DisplayName>
                    <Url>Opening+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Opening a Password Protected Presentation</Title>
                  <Description>Aspose.Slides for .NET provides facility to open password protected presentation using Presentation class. It offers few overloaded constructors and we can make use of one of the suitable constructors of Presentation class to create its object based on an existing presentation.In the example given below, we are accessing the password protected presentation. We will using LoadOptions class object to set the access password and then will use Presentation class to open presentation.</Description>
                  <FolderName>OpeningPasswordPresentation</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Opening a Presentation</DisplayName>
                    <Url>Opening+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Accessing the Document Properties of a Password Protected Presentation without Password.</Title>
                  <Description>Aspose.Slides for .NET provides facility to access the Document Properties of the presentation in password protected presentation without supplying password using Presentation class. It offers few overloaded constructors and we can make use of one of the suitable constructors of Presentation class to create its object based on an existing presentation.In the example given below, we are accessing the Document Properties of a password protected presentation. We will using LoadOptions class object to set the presentation access properties.</Description>
                  <FolderName>AccessingDocumentProperties</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Opening a Presentation</DisplayName>
                    <Url>Opening+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demoPassDocument.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Saving a Presentation</Title>
              <Description>The Presentation class holds the contents of a presentation. Whether you are creating a presentation from scratch or modifying an existing one, you want to save your presentation when you're finished.

    - Save to file.
    - Save with password protection.
    - Saving a password protected presentation with read access to document properties.
    - Save as read only.
    - Remove write protection.</Description>
              <FolderName>SavingAPresentation</FolderName>
              <Order>5</Order>
              <Examples>
                <Example>
                  <Title>Save to file</Title>
                  <Description>Save a presentation to files by calling the Presentation class Write method. Simply pass the file name to the Write method as a string.</Description>
                  <FolderName>SaveToFile</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Saving a Presentation</DisplayName>
                    <Url>Saving+a+Presentation</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\Saved.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Save with password protection</Title>
                  <Description>It's possible to save presentations with password protection. The presentation class exposes the Encrypt method which sets the password for the presentation. To do this, simply pass the password to the Encrypt method and then use the Write method exposed by the Presentation class as a string to save the presentation.</Description>
                  <FolderName>SaveWithPasswordProtection</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Saving a Presentation</DisplayName>
                    <Url>Saving+a+Presentation</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demoPass.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Saving a Password Protected Presentation with Read Access to Document Properties</Title>
                  <Description>It's possible to save presentations with password protection. But in that case access to the presentation's document properties is also prohibited. Aspose.Slides offers a mechanism for password protecting a presentation but still being able to access the document properties in PowerPoint. The Presentation exposes the EncryptDocumentProperties property that takes a Boolean value to allow or disallow access to the document properties in password protected mode. By default, its value is set to true.</Description>
                  <FolderName>SavingAPresentationProperties</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Saving a Presentation</DisplayName>
                    <Url>Saving+a+Presentation</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demoPassDocument.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Save As Read Only</Title>
                  <Description>Developers can now save presentations with write protection to allow the presentation to be read in read only mode. The Presentation class exposes the SetWriteProtection(string Password) method with which it is possible to save the presentation in read only mode by applying write protection on it. To do so, call the method and set the write protection password.</Description>
                  <FolderName>SaveAsReadOnly</FolderName>
                  <Order>4</Order>
                  <DocLink>
                    <DisplayName>Saving a Presentation</DisplayName>
                    <Url>Saving+a+Presentation</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demoWriteProtected.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Removing Write Protection from a Presentation</Title>
                  <Description>Spose.Slides for .NET provides a facility for accessing write protected presentation through the Presentation class. The IsWriteProtected property identifies whether a presentation is write protected or not. Then if it is write protected, the protection can be removed using the RemoveWriteProtection() method.</Description>
                  <FolderName>RemovingWriteProtection</FolderName>
                  <Order>5</Order>
                  <DocLink>
                    <DisplayName>Saving a Presentation</DisplayName>
                    <Url>Saving+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demoWriteProtected.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\newDemo.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Managing Presentation Properties</Title>
              <Description>Microsoft PowerPoint provides a feature to add some properties to the presentation files. These document properties allow some useful information to be stored along with the documents (presentation files). There are two kinds of document properties as follows:

    - System Defined (Built-in) Properties

    - User Defined (Custom) Properties

Built-in properties contain general information about the document like document title, author's name, document statistics and so on. Custom properties are those ones, which are defined by the users as Name/Value pairs, where both name and value are defined by the user. Using Aspose.Slides for .NET, developers can access and modify the values of built-in properties as well as custom properties.</Description>
              <FolderName>ManagingPresentationProperties</FolderName>
              <Order>6</Order>
              <Examples>
                <Example>
                  <Title>Accessing Built-in Properties</Title>
                  <Description>These properties as exposed by IDocumentProperties object.</Description>
                  <FolderName>AccessingBuiltinProperties</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Managing Presentation Properties</DisplayName>
                    <Url>Managing+Presentation+Properties</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Modifying Built-in Properties</Title>
                  <Description>Modifying the built-in properties of presentation files is as easy as that of accessing them. You can simply assign a string value to any desired property and the property value would be modified. In the example given below, we have demonstrated that how we can modify the built-in document properties of the presentation file.</Description>
                  <FolderName>ModifyingBuiltinProperties</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Managing Presentation Properties</DisplayName>
                    <Url>Managing+Presentation+Properties</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\DocProps.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Accessing and Modifying Custom Properties</Title>
                  <Description>Aspose.Slides for .NET also allows developers to access the values of custom properties. An example is given below that shows how can you access and modify all of these custom properties for a presentation.</Description>
                  <FolderName>AccessingModifyingProperties</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Managing Presentation Properties</DisplayName>
                    <Url>Managing+Presentation+Properties</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\CustomDemoModified.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Converting Presentation to TIFF</Title>
              <Description>TIFF format is known by its flexibility to accommodate multipage images and data. Keeping in view the importance and popularity of TIFF format, Aspose.Slides for .NET provides the support for converting presentations into TIFF document.

There are two different tiff export options:

- Converting Presentation to TIFF with default size.
- Converting Presentation to TIFF with custom size.</Description>
              <FolderName>ConvertingPresentationToTIFF</FolderName>
              <Order>7</Order>
              <Examples>
                <Example>
                  <Title>Converting Presentation to TIFF with default size</Title>
                  <Description>Aspose.Slides helps you convert a presentation into TIFF document with default options.</Description>
                  <FolderName>ConvertingWithDefaultSize</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Converting Presentation to TIFF</DisplayName>
                    <Url>Converting+Presentation+to+TIFF</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo.tiff</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting Presentation to TIFF with custom size</Title>
                  <Description>You can convert a presentation into TIFF document with customized image size using TiffOptions class.</Description>
                  <FolderName>ConvertingWithCustomSize</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Converting Presentation to TIFF</DisplayName>
                    <Url>Converting+Presentation+to+TIFF</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo.tiff</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Converting Presentation to XPS</Title>
              <Description>The Save method exposed by Presentation class can be used to convert the whole presentation into XPS document. 
Further, XpsOptions class exposes SaveMetafileAsPng property that can be set to true or false as per requirement.</Description>
              <FolderName>ConvertingPresentationToXPS</FolderName>
              <Order>8</Order>
              <Examples>
                <Example>
                  <Title>Converting Presentation to XPS without XpsOptions</Title>
                  <Description>You can convert a presentation into XPS document without using options provided by XpsOptions class.</Description>
                  <FolderName>ConvertingWithoutXpsOptions</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Converting Presentation to XPS</DisplayName>
                    <Url>Converting+Presentation+to+XPS</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo.xps</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting Presentation to XPS with XpsOptions</Title>
                  <Description>You can convert a presentation into XPS document using options provided by XpsOptions class.</Description>
                  <FolderName>ConvertingWiithXpsOptions</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Converting Presentation to XPS</DisplayName>
                    <Url>Converting+Presentation+to+XPS</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo.xps</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
        <Folder>
          <Title>Working With Slides in Presentation</Title>
          <Description>This section includes the following examples:

- Adding Slides to Presentation
- Accessing Slides of a Presentation
- Removing Slides from a Presentation
- Cloning Slides in Presentation
- Changing the Position of a Slide
- Setting the Background Color to Slides
- Setting the Background Color to a Gradient to Slides
- Setting the Image as Background to Slides
- Creating Slides Thumbnail Image
- Managing Slides Transitions
- Creating Slides SVG Image
- Working with Slide Comments
- Managing Slide Transitions</Description>
          <FolderName>WorkingWithSlidesInPresentation</FolderName>
          <Order>2</Order>
          <Examples>
            <Example>
              <Title>Adding Slides To Presentation</Title>
              <Description>Each PowerPoint presentation file contains Master / Layout slide and other Normal slides. It means that a presentation file contains at least one or more slides. It is important to know that presentation files without slides are not supported by Aspose.Slides for .NET. Each slide has unique Id and all the Normal Slides are arranged in an order specified by the zero based index.</Description>
              <FolderName>AddingSlidesToPresentation</FolderName>
              <Order>1</Order>
              <DocLink>
                <DisplayName>Adding Slides To Presentation</DisplayName>
                <Url>Adding+Slides+to+Presentation</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\EmptySlide.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Accessing Slides of A Presentation</Title>
              <Description>Each slide in a presentation has a unique Id. On the other hand, all the slides in the presentation are arranged in the order of the slide position starting from 0, that is, slide at position 1 will be accessible through 0 index of ISlideCollection associated with a Presentation object.</Description>
              <FolderName>AccessingSlidesOfAPresentation</FolderName>
              <Order>2</Order>
              <DocLink>
                <DisplayName>Accessing Slides of A Presentation</DisplayName>
                <Url>Accessing+Slides+of+a+Presentation</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Changing the Position of a Slide</Title>
              <Description>Using MS PowerPoint, you can drag a selected slide to any other position of the presentation. Aspose.Slides for .NET also allows to change the position of a slide within the presentation.</Description>
              <FolderName>ChangingPositionOfASlide</FolderName>
              <Order>5</Order>
              <DocLink>
                <DisplayName>Changing the Position of a Slide</DisplayName>
                <Url>Changing+the+Position+of+a+Slide</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Setting the Background Color to a Gradient to Slides</Title>
              <Description>Gradient is a graphic effect consisting of a gradual change in color. It is great for creating depth and highlights to sections of the images. It is possible to apply gradient effect on the background of a slide using Aspose.Slides for .NET.</Description>
              <FolderName>SettingBackgroundColorToGradientToSlides</FolderName>
              <Order>7</Order>
              <DocLink>
                <DisplayName>Setting the Background Color to a Gradient to Slides</DisplayName>
                <Url>Setting+the+Background+Color+to+a+Gradient+to+Slides</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Setting the Image as Background to Slides</Title>
              <Description>You can fill the slide background with any image using Aspose.Slides for .NET.</Description>
              <FolderName>SettingImageAsBackgroundToSlides</FolderName>
              <Order>8</Order>
              <DocLink>
                <DisplayName>Setting the Image as Background to Slides</DisplayName>
                <Url>Setting+the+Image+as+Background+to+Slides</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Creating Slides SVG Image</Title>
              <Description>Aspose.Slides for .NET is used to create presentation files, complete with slides. These slides can be viewed by opening presentations using Microsoft PowerPoint. But sometimes, developers may also need to view slides as SVG images in their favorite image viewer. In such cases, Aspose.Slides for .NET lets you export an individual slide to an SVG image.</Description>
              <FolderName>CreatingSlidesSVGImage</FolderName>
              <Order>11</Order>
              <DocLink>
                <DisplayName>Creating Slides SVG Image</DisplayName>
                <Url>Creating+Slides+SVG+Image</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.svg</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
          </Examples>
          <Folders>
            <Folder>
              <Title>Removing Slides From A Presentation</Title>
              <Description>Presentation class encapsulates a ISlideCollection that acts as a repository of all slides that are the part of the presentation. You can remove a slide from this Slides collection in two ways:

- Using Slide Reference

- Using Slide Index</Description>
              <FolderName>RemovingSlidesFromAPresentation</FolderName>
              <Order>3</Order>
              <Examples>
                <Example>
                  <Title>Using Slide Reference</Title>
                  <Description>In this example, we will see how we can remove a slide using a slide reference.</Description>
                  <FolderName>UsingSlideReference</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Removing Slides from a Presentation</DisplayName>
                    <Url>Removing+Slides+from+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\modified.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Using Slide Index</Title>
                  <Description>In this example, we will see how we can remove a slide using its index position in the slides collection of the presentation,</Description>
                  <FolderName>UsingSlideIndex</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Removing Slides from a Presentation</DisplayName>
                    <Url>Removing+Slides+from+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\modified.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Cloning Slides in Presentation</Title>
              <Description>Cloning is the process of making an exact copy or replica of something. Aspose.Slides for .NET makes it possible to make a copy or clone of any slide and then insert s that cloned slide to the current or any other opened presentation. The process of slide cloning creates a new slide that can be modified by developers without changing the original slide.</Description>
              <FolderName>CloningSlidesinPresentation</FolderName>
              <Order>4</Order>
              <Examples>
                <Example>
                  <Title>Within the Same Presentation from One Position to the End</Title>
                  <Description>You can clone a slide and then use it within the same presentation file at the end of the existing slides using the AddClone method.</Description>
                  <FolderName>WithinSamePresentationfromOnePositiontoEnd</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Cloning Slides in Presentation</DisplayName>
                    <Url>Cloning+Slides+in+Presentation</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>From One Position to Another within the Same Presentation</Title>
                  <Description>You can clone a slide and then use it within the same presentation file but at a different position by using the InsertClone method.</Description>
                  <FolderName>FromOnePositiontoAnotherwithinSamePresentation</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Cloning Slides in Presentation</DisplayName>
                    <Url>Cloning+Slides+in+Presentation</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>In Another Presentation at the End of the Existing Slides</Title>
                  <Description>You can clone a slide (from the zero index of the source presentation) to the end of the destination presentation.</Description>
                  <FolderName>InAnotherPresentationatEndofExistingSlides</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Cloning Slides in Presentation</DisplayName>
                    <Url>Cloning+Slides+in+Presentation</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>In Another Presentation at the Specified Position</Title>
                  <Description>You can clone the desired slide from the source presentation to the specified position in destination presentation using InsertClone method.</Description>
                  <FolderName>InAnotherPresentationatSpecifiedPosition</FolderName>
                  <Order>4</Order>
                  <DocLink>
                    <DisplayName>Cloning Slides in Presentation</DisplayName>
                    <Url>Cloning+Slides+in+Presentation</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>In Another Presentation with Master Slide from Source Presentation at the End of the Existing Slides</Title>
                  <Description>You can clone a slide with master slide from one presentation from and use it in another presentation. For that,  you need to clone the desired master slide from source presentation to destination presentation first. Then you need to use that master slide for cloning slide with master slide.</Description>
                  <FolderName>InAnotherPresentationWithMasterSlideFromSourcePresentationattheEndoftheExistingSlides</FolderName>
                  <Order>5</Order>
                  <DocLink>
                    <DisplayName>Cloning Slides in Presentation</DisplayName>
                    <Url>Cloning+Slides+in+Presentation</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Setting the Background Color to Slides</Title>
              <Description>Aspose.Slides for .NET may contain two types of slides: Master Slide &amp; Normal Slide.You can change the background colors of both types of the slides.</Description>
              <FolderName>SettingtheBackgroundColortoSlides</FolderName>
              <Order>6</Order>
              <Examples>
                <Example>
                  <Title>Setting the Background Color of a Master Slide</Title>
                  <Description>A Master Slide is like a template that contains all formatting settings, which are applied on all other normal slides contained inside the presentation. Iif you change the background color of the master slide, all normal slides in the presentation would receive the same background color settings.</Description>
                  <FolderName>SettingBackgroundColorOfAMasterSlide</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Setting the Background Color to Slides</DisplayName>
                    <Url>Setting+the+Background+Color+to+Slides</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Setting the Background Color of a Normal Slide</Title>
                  <Description>A Normal Slide is that one that inherits its format settings from the master slide. If you want to modify its background settings, you can modify the slide settings and get the desired results.</Description>
                  <FolderName>SettingBackgroundColorOfANormalSlide</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Setting the Background Color to Slides</DisplayName>
                    <Url>Setting+the+Background+Color+to+Slides</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Creating Slides Thumbnail Image</Title>
              <Description>Aspose.Slides for .NET is used to create presentation files containing slides. These slides can be viewed by opening presentation files using Microsoft PowerPoint. But sometimes, developers may need to view slides as images using their favorite image viewer. In such cases, Aspose.Slides for .NET help you generate thumbnail images of the slides.</Description>
              <FolderName>CreatingSlidesThumbnailImage</FolderName>
              <Order>9</Order>
              <Examples>
                <Example>
                  <Title>Generating a Thumbnail from a Slide</Title>
                  <Description>To generate the thumbnail of any desired slide using Aspose.Slides for .NET:

- Create an instance of the Presentation class.
- Obtain the reference of any desired slide by using its ID or index.
- Get the thumbnail image of the referenced slide on a specified scale.
- Save the thumbnail image in any desired image format.</Description>
                  <FolderName>GeneratingThumbnailFromSlide</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Creating Slides Thumbnail Image</DisplayName>
                    <Url>Creating+Slides+Thumbnail+Image</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Generating a Thumbnail from a Slide with User Defined Dimensions</Title>
                  <Description>To generate the thumbnail of any desired slide using Aspose.Slides for .NET:

- Create an instance of the Presentation class.
- Obtain the reference of any desired slide by using its ID or index.
- Get the X and Y scaling factors based on user defined X and Y dimensions.
- Get the thumbnail image of the referenced slide on a specified scale.
- Save the thumbnail image in any desired image format.</Description>
                  <FolderName>GeneratingThumbnailFromSlideWithUserDefinedDimensions</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Creating Slides Thumbnail Image</DisplayName>
                    <Url>Creating+Slides+Thumbnail+Image</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\Thumbnail2.jpg</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Generating a Thumbnail from a Slide in Notes Slides View</Title>
                  <Description>To generate the thumbnail of any desired slide in Notes Slide View using Aspose.Slides for .NET:

- Create an instance of the Presentation class.
- Obtain the reference of any desired slide by using its ID or index.
- Get the thumbnail image of the referenced slide on a specified scale in Notes Slide view.
- Save the thumbnail image in any desired image format.</Description>
                  <FolderName>GeneratingThumbnailFromSlideInNotesSlidesView</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Creating Slides Thumbnail Image</DisplayName>
                    <Url>Creating+Slides+Thumbnail+Image</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\Notes_tnail.jpg</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Managing Slides Transitions</Title>
              <Description>Aspose.Slides for .NET also allows developers to manage or customize the slide transition effects of the slides such as:

- Managing Simple Slide Transitions
- Managing Better Slide Transitions</Description>
              <FolderName>ManagingSlidesTransitions</FolderName>
              <Order>10</Order>
              <Examples>
                <Example>
                  <Title>Managing Simple Slide Transitions</Title>
                  <Description>Using Aspose.Slides for .NET, you can not only apply different slide transition effects on the slides, but also customize the behavior of these transition effects.</Description>
                  <FolderName>ManagingSimpleSlideTransitions</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Managing Slides Transitions</DisplayName>
                    <Url>Managing+Slides+Transitions</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\SampleTransition.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Managing Better Slide Transitions</Title>
                  <Description>You can apply better and controlled transition effects on the slide.</Description>
                  <FolderName>ManagingBetterSlideTransitions</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Managing Slides Transitions</DisplayName>
                    <Url>Managing+Slides+Transitions</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\Aspose.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\SampleTransition.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
        <Folder>
          <Title>Working With Shapes</Title>
          <Description>This section includes the following topics:

 - Adding Line Shape to Slide
 - Finding a Shape in a Slide
 - Applying Animations on Shapes inside Slide
 - Formatting Lines of the Shapes
 - Filling Shapes with Gradient
 - Filling Shapes with Pattern
 - Filling Shapes with Picture
 - Filling Shapes with Solid Color
 - Rotating Shapes
 - Adding Picture Frame to Slide
 - Adding Audio Frame to Slide
 - Adding Video Frame to Slide
 - Working with OLE Object Frames
 - Adding Ellipse Shape to Slide
 - Adding Rectangle Shape to Slide
 - Adding an Embedded Video Frame to Slide</Description>
          <FolderName>WorkingWithShapes</FolderName>
          <Order>3</Order>
          <Examples>
            <Example>
              <Title>Finding A Shape In A Slide</Title>
              <Description>PowerPoint Presentation files do not have any way to identify shapes on a slide except an internal unique Id. It seems to be difficult for developers to find a shape using its internal unique Id.
In this example, we will see how we can find a shape in a slide using Aspose.Slides for .NET.</Description>
              <FolderName>FindingShapeInSlide</FolderName>
              <Order>2</Order>
              <DocLink>
                <DisplayName>Finding a Shape in a Slide</DisplayName>
                <Url>Finding+a+Shape+in+a+Slide</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\SamplePres.pptx</Path>
                </DataFile>
              </InputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Applying Animations On Shapes Inside Slide</Title>
              <Description>Animation is one of the most important parts of the presentations that make them more attractive and meaningful. Aspose.Slides for .NET also allows developers to apply different kinds of animation effects on different kinds of shapes. There is a separate namespace Aspose.Slides.Pptx.Animation that provides classes to handle the animations on PPTX presentations.</Description>
              <FolderName>ApplyingAnimationsOnShapesInsideSlide</FolderName>
              <Order>3</Order>
              <DocLink>
                <DisplayName>Applying Animations on Shapes inside Slide</DisplayName>
                <Url>Applying+Animations+on+Shapes+inside+Slide</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\AnimExample.pptx</Path>
                </DataFile>
              </InputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Filling Shapes With Gradient</Title>
              <Description>In this example, we will see how we can fill the shapes with the gradient of two colors using Aspose.Slides for .NET.</Description>
              <FolderName>FillingShapesGradient</FolderName>
              <Order>5</Order>
              <DocLink>
                <DisplayName>Filling Shapes with Gradient</DisplayName>
                <Url>Filling+Shapes+with+Gradient</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Filling Shapes With Pattern</Title>
              <Description>You can use the patterns to fill the shapes in more attractive styles. Aspose.Slides for .NET offers more than 45 pre-defined pattern styles that can be used by developers to enrich their presentations.</Description>
              <FolderName>FillingShapesPattern</FolderName>
              <Order>6</Order>
              <DocLink>
                <DisplayName>Filling Shapes with Pattern</DisplayName>
                <Url>Filling+Shapes+with+Pattern</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Filling Shapes With Picture</Title>
              <Description>In this example, we will see how we can fill the shapes with picture using Aspose.Slides for .NET.</Description>
              <FolderName>FillingShapesPicture</FolderName>
              <Order>7</Order>
              <DocLink>
                <DisplayName>Filling Shapes with Picture</DisplayName>
                <Url>Filling+Shapes+with+Picture</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Rotating Shapes</Title>
              <Description>In this example, we will see how we can rotate the shapes in the presntation using Aspose.Slides for .NET.</Description>
              <FolderName>RotatingShapes</FolderName>
              <Order>8</Order>
              <DocLink>
                <DisplayName>Rotating Shapes</DisplayName>
                <Url>Rotating+Shapes</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Adding Audio Frame To Slide</Title>
              <Description>An Audio Frame contains the embedded audio file. In this example, we will see how we can embed audio frames in the slides using Aspose.Slides for .NET.</Description>
              <FolderName>AddingAudioFrame</FolderName>
              <Order>10</Order>
              <DocLink>
                <DisplayName>Adding Audio Frame to Slide</DisplayName>
                <Url>Adding+Audio+Frame+to+Slide</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\sampleaudio.wav</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\AudioFrameEmbed.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Adding Video Frame To Slide</Title>
              <Description>Developers can also add and play video files in the slides to enrich their presentations. Aspose.Slides for .NET supports adding Video Frames to the slides that make it possible for developers to add videos to their presentations.</Description>
              <FolderName>AddingVideoFrame</FolderName>
              <Order>11</Order>
              <DocLink>
                <DisplayName>Adding Video Frame to Slide</DisplayName>
                <Url>Adding+Video+Frame+to+Slide</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\video1.avi</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\VideoFrame.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Adding an Embedded Video Frame To Slide</Title>
              <Description>Developers can also embed and play video files in the slides to enrich their presentations. Aspose.Slides for .NET supports adding Embedded Video Frames to the slides that make it possible for developers to add videos to their presentations.</Description>
              <FolderName>EmbeddedVideoFrame</FolderName>
              <Order>15</Order>
              <DocLink>
                <DisplayName>Adding an Embedded Video Frame to Slide</DisplayName>
                <Url>Adding+an+Embedded+Video+Frame+to+Slide</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Wildlife.wmv</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\VideoFrame.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Calculating Connector Line Angle</Title>
              <Description>In this example, we will see how we can calculate the angle of connector line added in slide using Aspose.Slides for .NET.</Description>
              <FolderName>ConnectorLineAngle</FolderName>
              <Order>16</Order>
              <DocLink>
                <DisplayName>Calculating Connector Line Angle</DisplayName>
                <Url>Calculating+Connector+Line+Angle</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
          </Examples>
          <Folders>
            <Folder>
              <Title>Adding Line Shape To Slide</Title>
              <Description>Aspose.Slides for .NET supports adding different kinds of shapes to the slides. In this topic, we will start working with shapes by adding lines to the slides. Using Aspose.Slides for .NET , developers can not only create simple lines , but some fancy lines can also be drawn on the slides.</Description>
              <FolderName>AddingLineShapeToSlide</FolderName>
              <Order>1</Order>
              <Examples>
                <Example>
                  <Title>Adding Plain Line To Slide</Title>
                  <Description>In this example, we will see how we can add a simple plain line to a selected slide of the presentation using Aspose,Slides for .NET.</Description>
                  <FolderName>AddingPlainLineToSlide</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Adding Line Shape to Slide</DisplayName>
                    <Url>Adding+Line+Shape+to+Slide</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Adding Arrow Shaped Line To Slide</Title>
                  <Description>Aspose.Slides for .NET  allows developers to configure some properties of the line to make it look more appealing. In this example, we will see how we can add arrow shaped line to the slide using Aspose.Slides for .NET.</Description>
                  <FolderName>AddingArrowShapedLineToSlide</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Adding Line Shape to Slide</DisplayName>
                    <Url>Adding+Line+Shape+to+Slide</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\LineShape2.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Formatting Lines Of The Shapes</Title>
              <Description>This section includes the following topics:
 - Formatting the Lines of Shapes
 - Formatting the Join Styles</Description>
              <FolderName>FormattingLines</FolderName>
              <Order>4</Order>
              <Examples>
                <Example>
                  <Title>Formatting The Lines Of Shapes</Title>
                  <Description>Using Aspose.Slides for .NET, you can change the format settings of the lines with which a shape is obtained. For example, you can change the width of the line, modify the color of the line, apply different kinds of styles on the lines etc.</Description>
                  <FolderName>FormattingLines</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Formatting Lines of the Shapes</DisplayName>
                    <Url>Formatting+Lines+of+the+Shapes</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>FormattingThe Join Styles</Title>
                  <Description>In this example, we will see how we can format the join styles using Aspose.Slides for .NET.</Description>
                  <FolderName>FormattingJoinStyles</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Formatting Lines of the Shapes</DisplayName>
                    <Url>Formatting+Lines+of+the+Shapes</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Adding Picture Frame To Slide</Title>
              <Description>Picture frame is also one of the shapes offered by Aspose.Slides for .NET . Adding picture frame to a slide is bit trickier than simple shapes. A picture frame is like a picture in a frame. You can add any desired picture to your slide as a picture frame.</Description>
              <FolderName>AddingPictureFrame</FolderName>
              <Order>9</Order>
              <Examples>
                <Example>
                  <Title>Adding Simple Picture Frames To Slides</Title>
                  <Description>In this example, we will see how we can add simple picture frames to the slides using Aspose.Slides for .NET.</Description>
                  <FolderName>AddingSimplePictureFrames</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Adding Picture Frame to Slide</DisplayName>
                    <Url>Adding+Picture+Frame+to+Slide</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\aspose-logo.jpg</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RectPicFrame.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Controlling Picture Frame Formatting</Title>
                  <Description>In this example, we will see how we can control the formatting of a picture frame according to the requirement using Aspose.Slides for .NET.</Description>
                  <FolderName>ControllingPictureFrameFormatting</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Adding Picture Frame to Slide</DisplayName>
                    <Url>Adding+Picture+Frame+to+Slide</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\aspose-logo.jpg</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RectPicFrameFormat.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Working With OLE Object Frames</Title>
              <Description>OLE stands for Object Linking &amp; Embedding . It's a Microsoft technology that allows objects created in one application to be embedded in another application. Aspose.Slides for .NET supports adding OLE Objects to the slides in the form of OLE Object Frames.

This article explains different examples of working with Ole frames:

 - Adding an OLE Object Frame to a Slide
 - Accessing an OLE Object Frame from a Slide
 - Changing an OLE Object data from a Slide</Description>
              <FolderName>OLEObjectFrames</FolderName>
              <Order>12</Order>
              <Examples>
                <Example>
                  <Title>Adding An OLE Object Frame To A Slide</Title>
                  <Description>In this example, we will see how we can add an OLE object frame to a slide using Aspose.Slides for .NET.</Description>
                  <FolderName>AddingOLEObjectFrame</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Working With OLE Object Frames</DisplayName>
                    <Url>Working+with+OLE+Object+Frames</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\book1.xlsx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\OleEmbed.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Accessing An OLE Object Frame From A Slide</Title>
                  <Description>In this example, we will see how we can access an OLE object frame from a slide using Aspose.Slides for .NET.</Description>
                  <FolderName>AccessingOLEObjectFrame</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Working with OLE Object Frames</DisplayName>
                    <Url>Working+with+OLE+Object+Frames</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\OleEmbed.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\excelFromOLE.xlsx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Changing An OLE Object Data From A Slide</Title>
                  <Description>In this example, we will see how we can change an OLE object data from a slide using Aspose.Slides for .NET.</Description>
                  <FolderName>ChangingOLEObjectData</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Working with OLE Object Frames</DisplayName>
                    <Url>Working+with+OLE+Object+Frames</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\OleEmbed.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\OleEdit.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Adding Ellipse Shape To Slide</Title>
              <Description>Aspose.Slides for .NET provides an easier set of APIs to draw different kinds of shapes with just a few lines of code. This section includes the following topics:

 - Adding Simple Ellipse in the Slide
 - Adding Formatted Ellipse to the Slide</Description>
              <FolderName>AddingEllipseShape</FolderName>
              <Order>13</Order>
              <Examples>
                <Example>
                  <Title>Adding Simple Ellipse in the Slide</Title>
                  <Description>In this example, we will see how we can add a simple ellipse to the first slide using Aspose.Slides for .NET.</Description>
                  <FolderName>SimpleEllipse</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Adding Ellipse Shape to Slide</DisplayName>
                    <Url>Adding+Ellipse+Shape+to+Slide</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\EllipseShp1.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Adding Formatted Ellipse in the Slide</Title>
                  <Description>In this example, we will see how we can add a formatted ellipse to the first slide of the presentation using Aspose.Slides for .NET.</Description>
                  <FolderName>FormattedEllipse</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Adding Ellipse Shape to Slide</DisplayName>
                    <Url>Adding+Ellipse+Shape+to+Slide</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\EllipseShp2.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Adding Rectangle Shape to Slide</Title>
              <Description>This section includes the following topics:

 - Adding Simple Rectangle in the Slide
 - Adding Formatted Rectangle to Slide</Description>
              <FolderName>RectangleShape</FolderName>
              <Order>14</Order>
              <Examples>
                <Example>
                  <Title>Adding Simple Rectangle in the Slide</Title>
                  <Description>In this example, we will see how we can add simple rectangle to the first slide of the presentation using Aspose.Slides for .NET.</Description>
                  <FolderName>SimpleRectangle</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Adding Rectangle Shape to Slide</DisplayName>
                    <Url>Adding+Rectangle+Shape+to+Slide</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RectShp1.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Adding Formatted Rectangle To Slide</Title>
                  <Description>In this example, we will see how we can add the formatted rectangle to the slide using Aspose.Slides for ,NET.</Description>
                  <FolderName>FormattedRectangle</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Adding Rectangle Shape to Slide</DisplayName>
                    <Url>Adding+Rectangle+Shape+to+Slide</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RectShp2.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
        <Folder>
          <Title>Working with Charts</Title>
          <Description>This section includes the following topics: 

 - Creating a Chart from Scratch
 - Updating an Existing Chart
 - Setting Pie Chart Sector Colors
 - Formatting Chart Entities
 - Adding Chart Trend Lines
 - Setting Number Format for Chart Data Cell</Description>
          <FolderName>WorkingWithCharts</FolderName>
          <Order>4</Order>
          <Examples>
            <Example>
              <Title>Updating An Existing Chart</Title>
              <Description>In this example, we will see how we can update the existing charts charts generated through Aspose.Slides or PowerPoint using Aspose.Slides for .NET.s</Description>
              <FolderName>ExistingChart</FolderName>
              <Order>2</Order>
              <DocLink>
                <DisplayName>Updating an Existing Chart</DisplayName>
                <Url>Updating+an+Existing+Chart</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\AsposeChart.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\AsposeChartModified.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Formatting Chart Entities</Title>
              <Description>In this example, we will see how we can format different chart entities including chart category and value axis using Aspose.Slides for .NET.</Description>
              <FolderName>ChartEntities</FolderName>
              <Order>3</Order>
              <DocLink>
                <DisplayName>Formatting Chart Entities</DisplayName>
                <Url>Formatting+Chart+Entities</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\FormattedChart.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Adding Chart Trend Lines</Title>
              <Description>In this example, we will see how we can add the trend lines for the chart using Aspose.Slides for .NET.</Description>
              <FolderName>ChartTrendLines</FolderName>
              <Order>4</Order>
              <DocLink>
                <DisplayName>Adding Chart Trend Lines</DisplayName>
                <Url>Adding+Chart+Trend+Lines</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\ChartTrendLines.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Setting Number Format For Chart Data Cell</Title>
              <Description>In this example, we will see how we can set the chart data number format using Aspose.Slides for .NET.</Description>
              <FolderName>NumberFormat</FolderName>
              <Order>5</Order>
              <DocLink>
                <DisplayName>Setting Number Format for Chart Data Cell</DisplayName>
                <Url>Setting+Number+Format+for+Chart+Data+Cell</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\PresetNumberFormat.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
          </Examples>
          <Folders>
            <Folder>
              <Title>Creating A Chart From Scratch</Title>
              <Description>Aspose.Slides for .NET allows the developers to add custom charts into slides from scratch. It allows to create normal and scatter charts with multiple series from scratch. This topic includes the following examples:

 - Creating Normal Charts
 - Creating Scattered Chart with multiple series and different series markers</Description>
              <FolderName>ChartFromScratch</FolderName>
              <Order>1</Order>
              <Examples>
                <Example>
                  <Title>Creating Normal Charts</Title>
                  <Description>In this example, we will see how we can create normal charts using Aspose.Slides for .NET.</Description>
                  <FolderName>NormalCharts</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Creating a Chart from Scratch</DisplayName>
                    <Url>Creating+a+Chart+from+Scratch</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\AsposeChart.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Creating Scattered Chart With Multiple Series And Different Series Markers</Title>
                  <Description>In this example, we will see how we can create a scattered chart with different series markers using Aspose.Slides for .NET.</Description>
                  <FolderName>ScatteredChart</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Creating a Chart from Scratch</DisplayName>
                    <Url>Creating+a+Chart+from+Scratch</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\AsposeChart.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
        <Folder>
          <Title>Working With Tables</Title>
          <Description>This section includes the following topics: 

 - Creating a Table from Scratch in Slide
 - Accessing an Existing Table in Slide
 - Cells numbering used in MS PowerPoint and Aspose.Slides for .NET
 - Removing Row Or Column in Table</Description>
          <FolderName>WorkingWithTables</FolderName>
          <Order>5</Order>
          <Examples>
            <Example>
              <Title>Accessing An Existing Table In Slide</Title>
              <Description>In this example, we will see how we can access a table that already exists in a slide using Aspose.Slides for .NET</Description>
              <FolderName>ExistingTable</FolderName>
              <Order>2</Order>
              <DocLink>
                <DisplayName>Accessing an Existing Table in Slide</DisplayName>
                <Url>Accessing+an+Existing+Table+in+Slide</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\table.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\table1.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Removing Row Or Column In Table</Title>
              <Description>In this example, we will see how we can remove the columns or rows belonging to the tables using Aspose.Slides for .NET</Description>
              <FolderName>RemovingRowColumn</FolderName>
              <Order>3</Order>
              <DocLink>
                <DisplayName>Removing Row Or Column in Table</DisplayName>
                <Url>Removing+Row+Or+Column+in+Table</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\TestTable.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
          </Examples>
          <Folders>
            <Folder>
              <Title>Creating A Table From Scratch In Slide</Title>
              <Description>This section includes the following topics: 

 - Creating Table from Scratch
 - Remove Table Borders</Description>
              <FolderName>TableFromScratch</FolderName>
              <Order>1</Order>
              <Examples>
                <Example>
                  <Title>Creating Table From Scratch</Title>
                  <Description>In this example, we will see how we can create a table from scratch using Aspose.Slides for .NET.</Description>
                  <FolderName>FromScratch</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Creating a Table from Scratch in Slide</DisplayName>
                    <Url>Creating+a+Table+from+Scratch+in+Slide</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\table.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Removing Table Cells Border</Title>
                  <Description>In this example, we will see how we can remove the borders from table cells using Aspose.Slides for .NET.</Description>
                  <FolderName>CellsBorder</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Creating a Table from Scratch in Slide</DisplayName>
                    <Url>Creating+a+Table+from+Scratch+in+Slide</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\table.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
        <Folder>
          <Title>Working With Text In Presentation</Title>
          <Description>This section includes the following topics: 

 - Replacing Text in a Placeholder
 - Creating a TextBox on Slide
 - Creating TextBox with Hyperlink
 - Applying Shadow Effects on Slide Text
 - Managing Paragraphs Alignment
 - Managing Font Related Properties
 - Managing Font Family of Text
 - Managing Multiple Paragraphs having Multiple Portions
 - Managing Paragraph Bullets in PPTX
 - Importing and Exporting HTML Text in PPTX
 - Using Custom Fonts without Installing them
 - Using Default Fonts for Rendering Presentation
 - Managing Paragraph Indent
 - Tabs and EffectiveTabs in Presentation</Description>
          <FolderName>TextInPresentation</FolderName>
          <Order>6</Order>
          <Examples>
            <Example>
              <Title>Replacing Text In A Placeholder</Title>
              <Description>In this example, we will see how the text contained inside a Placeholder can be replaced or modified using Aspose.Slides for .NET.</Description>
              <FolderName>ReplacingText</FolderName>
              <Order>1</Order>
              <DocLink>
                <DisplayName>Replacing Text in a Placeholder</DisplayName>
                <Url>Replacing+Text+in+a+Placeholder</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\output.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Creating A TextBox On Slide</Title>
              <Description>In this example, we will see how we can create a textbox on slides using Aspose.Slides for .NET.</Description>
              <FolderName>TextBoxOnSlide</FolderName>
              <Order>2</Order>
              <DocLink>
                <DisplayName>Creating a TextBox on Slide</DisplayName>
                <Url>Creating+a+TextBox+on+Slide</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\TextBox.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Creating TextBox With Hyperlink</Title>
              <Description>In this example, we will see how we can create a TextBox with Hyperlink by using Aspose.Slides for .NET.</Description>
              <FolderName>TextBoxHyperlink</FolderName>
              <Order>3</Order>
              <DocLink>
                <DisplayName>Creating TextBox with Hyperlink</DisplayName>
                <Url>Creating+TextBox+with+Hyperlink</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\hLinkPPTX.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Applying Shadow Effects On Slide Text</Title>
              <Description>In this example, we will see how we can apply shadow effects on the text in a PPTX presentation using Aspose.Slides for .NET.</Description>
              <FolderName>ShadowEffects</FolderName>
              <Order>4</Order>
              <DocLink>
                <DisplayName>Applying Shadow Effects on Slide Text</DisplayName>
                <Url>Applying+Shadow+Effects+on+Slide+Text</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\pres.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Managing Paragraphs Alignment</Title>
              <Description>In this example, we will see how we can control the alignment of the text paragraphs in a slide using Aspose.Slides for .NET.</Description>
              <FolderName>ParagraphsAlignment</FolderName>
              <Order>5</Order>
              <DocLink>
                <DisplayName>Managing Paragraphs Alignment</DisplayName>
                <Url>Managing+Paragraphs+Alignment</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\Centeralign.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Managing Font Related Properties</Title>
              <Description>Presentations usually contain both text and images. The text can be formatted in various way, either to highlight specific sections and words, or to conform with corporate styles. Text formatting helps users vary the look and feel of the presentation content.</Description>
              <FolderName>FontProperties</FolderName>
              <Order>6</Order>
              <DocLink>
                <DisplayName>Managing Font Related Properties</DisplayName>
                <Url>Managing+Font+Related+Properties</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\WelcomeFont.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Managing Font Family Of Text</Title>
              <Description>In this example, we will see how we can create a textbox with some text and then define a particular font, and various other properties of the font family category using Aspose.Slides for .NET.</Description>
              <FolderName>FontFamily</FolderName>
              <Order>7</Order>
              <DocLink>
                <DisplayName>Managing Font Family of Text</DisplayName>
                <Url>Managing+Font+Family+of+Text</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\pptxFont.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Managing Multiple Paragraphs Having Multiple Portions</Title>
              <Description>An   ITextFame object can have one or more Paragraphs (every paragraph is created through a carriage return), that is a collection of IParagraph objects. Furthermore, an  IParagraph object can have one or more Portions (a collection of IPortion objects. An  IPortion object manages text and its formatting properties. So, it means that IParagraph object has capacity to handle text with different formatting properties through its underlying IPortion objects.</Description>
              <FolderName>MultipleParagraphs</FolderName>
              <Order>8</Order>
              <DocLink>
                <DisplayName>Managing Multiple Paragraphs having Multiple Portions</DisplayName>
                <Url>Managing+Multiple+Paragraphs+having+Multiple+Portions</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\multiParaPort.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Managing Paragraph Bullets In PPTX</Title>
              <Description>Bullets are more useful where the something is to be described in steps. Moreover, text looks well organized with the use of bullets. Bulleted paragraphs are always easier to read and understand.</Description>
              <FolderName>ParagraphBullets</FolderName>
              <Order>9</Order>
              <DocLink>
                <DisplayName>Managing Paragraph Bullets in PPTX</DisplayName>
                <Url>Managing+Paragraph+Bullets+in+PPTX</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\Bullet.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Using Default Fonts For Rendering Presentation</Title>
              <Description>In this example, we will see how we can set the default font fore rendering the presentation to PDF, XPS or thumbnails using Aspose.Slides for .NET.</Description>
              <FolderName>DefaultFonts</FolderName>
              <Order>11</Order>
              <DocLink>
                <DisplayName>Using Default Fonts for Rendering Presentation</DisplayName>
                <Url>Using+Default+Fonts+for+Rendering+Presentation</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\Aspose.pptx</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\output.png</Path>
                </DataFile>
                <DataFile>
                  <Path>..\Data\output.xps</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Managing Paragraph Indent</Title>
              <Description>In this example, we will see how we can manage the paragraph indent using Aspose.Slides for .NET.</Description>
              <FolderName>ParagraphIndent</FolderName>
              <Order>12</Order>
              <DocLink>
                <DisplayName>Managing Paragraph Indent</DisplayName>
                <Url>Managing+Paragraph+Indent</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\InOutDent.pptx</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
          </Examples>
          <Folders>
            <Folder>
              <Title>Importing and Exporting HTML Text in PPTX</Title>
              <Description>This section includes the following topics: 

 - Importing HTML Text in Paragraphs 
 - Exporting Paragraphs Text to HTML</Description>
              <FolderName>HTMLText</FolderName>
              <Order>10</Order>
              <Examples>
                <Example>
                  <Title>Importing HTML Text In Paragraphs</Title>
                  <Description>In this example, we will see how we can import the HTML text in paragraphs using Aspose.Slides for .NET.</Description>
                  <FolderName>ImportingHTMLText</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Importing HTML Text in Paragraphs</DisplayName>
                    <Url>Importing+and+Exporting+HTML+Text+in+PPTX</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\file.html</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\output.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Exporting Paragraphs Text To HTML</Title>
                  <Description>In this example, we will see how we can export the paragraph text to HTML using Aspose.Slides for .NET.</Description>
                  <FolderName>ExportingParagraphText</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Exporting Paragraphs Text to HTML</DisplayName>
                    <Url>Importing+and+Exporting+HTML+Text+in+PPTX</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\input.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\output.html</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
        <Folder>
          <Title>Working With SmartArt In Presentation</Title>
          <Description>This section includes the following topics: 

 - Add and Access the SmartArt shape
 - Managing SmartArt Style and Color Layouts
 - Accessing SmartArt Nodes and Child Nodes
 - Add and Remove SmartArt Nodes and Child Nodes
 - Checking Assistant Nodes in SmartArt Shapes</Description>
          <FolderName>SmartArtInPresentation</FolderName>
          <Order>7</Order>
          <Folders>
            <Folder>
              <Title>Add and Access the SmartArt Shape</Title>
              <Description>This section includes the following topics: 

 - Creating a SmartArt Shape
 - Accessing the SmartArt shape in slide</Description>
              <FolderName>AddAccessSmartArt</FolderName>
              <Order>1</Order>
              <Examples>
                <Example>
                  <Title>Creating A SmartArt Shape</Title>
                  <Description>In this example, we will see how we can create a SmartArt shape using Aspose.Slides for .NET.</Description>
                  <FolderName>CreatingSmartArtShape</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Add and Access the SmartArt shape</DisplayName>
                    <Url>Add+and+Access+the+SmartArt+shape</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Accessing The SmartArt Shape In Slide</Title>
                  <Description>In this example, we will see how we can access the SmartArt shapes added in presentation slide using Aspose.Slides for .NET.</Description>
                  <FolderName>AccessingSmartArtShape</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Add and Access the SmartArt shape</DisplayName>
                    <Url>Add+and+Access+the+SmartArt+shape</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Managing SmartArt Style and Color Layouts</Title>
              <Description>This section includes the following topics: 

 - Accessing SmartArt Shape Layout type
 - Changing SmartArt Shape Style
 - Changing SmartArt Shape Color Style</Description>
              <FolderName>ManagingSmartArtStyle</FolderName>
              <Order>2</Order>
              <Examples>
                <Example>
                  <Title>Accessing SmartArt Shape With Particular Layout Type</Title>
                  <Description>In this example, we will see how we can access the SmartArt shape with particular layout type using Aspose.Slides for .NET.</Description>
                  <FolderName>AccessingSmartArt</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Managing SmartArt Style and Color Layouts</DisplayName>
                    <Url>Managing+SmartArt+Style+and+Color+Layouts</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Changing SmartArt Shape Style</Title>
                  <Description>In this example, we will see how we can change the SmartArt shape style using Aspose.Slides for .NET.</Description>
                  <FolderName>ChangingSmartArt</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Managing SmartArt Style and Color Layouts</DisplayName>
                    <Url>Managing+SmartArt+Style+and+Color+Layouts</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\ChangeSmartArtStyle.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Changing SmartArt Shape Color Style</Title>
                  <Description>In this example, we will see how we can change SmartArt shape color style using Aspose.Slides for .NET.</Description>
                  <FolderName>SmartArtColorStyle</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Managing SmartArt Style and Color Layouts</DisplayName>
                    <Url>Managing+SmartArt+Style+and+Color+Layouts</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\ChangeSmartArtColorStyle.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Accessing SmartArt Nodes and Child Nodes</Title>
              <Description>This section includes the following topics: 

 - Accessing SmartArt Shape Nodes
 - Accessing SmartArt Shape Child Nodes
 - Accessing SmartArt Shape Child Node at Specific Position</Description>
              <FolderName>AccessSmartArtNodes</FolderName>
              <Order>3</Order>
              <Examples>
                <Example>
                  <Title>Accessing SmartArt Shape Nodes</Title>
                  <Description>In this example, we will see how we can access nodes inside SmartArt shape using Aspose.Slides for .NET.</Description>
                  <FolderName>AccessSmartArt</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Accessing SmartArt Nodes and Child Nodes</DisplayName>
                    <Url>Accessing+SmartArt+Nodes+and+Child+Nodes</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Accessing SmartArt Shape Child Nodes</Title>
                  <Description>In this example, we will see how we can access the child nodes belonging to respective nodes of SmartArt shape.</Description>
                  <FolderName>AccessChildNodes</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Accessing SmartArt Nodes and Child Nodes</DisplayName>
                    <Url>Accessing+SmartArt+Nodes+and+Child+Nodes</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Accessing SmartArt Shape Child Node At Specific Position</Title>
                  <Description>In this example, we will see how we can access the child nodes at some particular position belonging to respective nodes of SmartArt shape.</Description>
                  <FolderName>ChildNodeSpecificPosition</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Accessing SmartArt Nodes and Child Nodes</DisplayName>
                    <Url>Accessing+SmartArt+Nodes+and+Child+Nodes</Url>
                  </DocLink>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Add And Remove SmartArt Nodes And Child Nodes</Title>
              <Description>This section includes the following topics:

 - Adding SmartArt Shape Nodes
 - Adding SmartArt Shape Node at Specific Position
 - Remove SmartArt Shape Node
 - Remove SmartArt Shape Node at Specific Position</Description>
              <FolderName>AddRemoveNodes</FolderName>
              <Order>4</Order>
              <Examples>
                <Example>
                  <Title>Adding SmartArt Shape Nodes</Title>
                  <Description>In this example, we will see how we can add node and child node inside SmartArt shape using Aspose.Slides for .NET.</Description>
                  <FolderName>AddingNodes</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Add and Remove SmartArt Nodes and Child Nodes</DisplayName>
                    <Url>Add+and+Remove+SmartArt+Nodes+and+Child+Nodes</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\AddSmartArtNode.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Adding SmartArt Shape Node At Specific Position</Title>
                  <Description>In this example, we will see how we can add the child nodes belonging to respective nodes of SmartArt shape at particular position using Aspose.Slides for .NET.</Description>
                  <FolderName>NodeAtSpecificPosition</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Add and Remove SmartArt Nodes and Child Nodes</DisplayName>
                    <Url>Add+and+Remove+SmartArt+Nodes+and+Child+Nodes</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\AddSmartArtNodeByPosition.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Remove SmartArt Shape Node</Title>
                  <Description>In this example, we will see how we can remove the nodes inside SmartArt shape using Aspose.Slides for .NET.</Description>
                  <FolderName>RemoveNode</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Add and Remove SmartArt Nodes and Child Nodes</DisplayName>
                    <Url>Add+and+Remove+SmartArt+Nodes+and+Child+Nodes</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RemoveSmartArtNode.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Remove SmartArt Shape Node At Specific Position</Title>
                  <Description>In this example, we will see how we can remove the nodes inside SmartArt shape at particular position using Aspose.Slides for .NET.</Description>
                  <FolderName>RemoveNodeSpecificPosition</FolderName>
                  <Order>4</Order>
                  <DocLink>
                    <DisplayName>Add and Remove SmartArt Nodes and Child Nodes</DisplayName>
                    <Url>Add+and+Remove+SmartArt+Nodes+and+Child+Nodes</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RemoveSmartArtNodeByPosition.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Checking Assistant Nodes In SmartArt Shapes</Title>
              <Description>This section includes the following topics:

 - Checking Assistant Node in SmartArt Shape
 - Checking SmartArt Node level</Description>
              <FolderName>CheckAssistantNodes</FolderName>
              <Order>5</Order>
              <Examples>
                <Example>
                  <Title>Checking Assistant Node In SmartArt Shape</Title>
                  <Description>In this example, we will see how we can identify assistant nodes in the SmartArt nodes collection and changing them using Aspose.Slides for .NET.</Description>
                  <FolderName>AssistantNode</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Checking Assistant Nodes in SmartArt Shapes</DisplayName>
                    <Url>Checking+Assistant+Nodes+in+SmartArt+Shapes</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\ChangeAssitantNode.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Checking SmartArt Node Level</Title>
                  <Description>In this example, we will see how we can access the nodes of SmartArt shape at particular level using Aspose.Slides for .NET.</Description>
                  <FolderName>SmartArtNodeLevel</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Checking Assistant Nodes in SmartArt Shapes</DisplayName>
                    <Url>Checking+Assistant+Nodes+in+SmartArt+Shapes</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\SimpleSmartArt.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
      </Folders>
    </Folder>
  </Folders>
</Data>